(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{307:function(t,n,p){"use strict";p.r(n);var s=p(10),i=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"linux突然发现cpu占用100-该怎么办"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#linux突然发现cpu占用100-该怎么办"}},[t._v("#")]),t._v(" Linux突然发现CPU占用100%该怎么办？")]),t._v(" "),n("p",[t._v("程序占用CPU太高，除了确实是计算密集型应用之外，通常原因都是出现了死循环。")]),t._v(" "),n("p",[t._v("1、使用top命令查看cpu占用资源较高的进程PID\n根据top命令，发现PID为55555的Java进程占用CPU高达300%，出现故障。")]),t._v(" "),n("p",[t._v("2、通过ps aux | grep PID命令，可以进一步确定是什么进程出现了问题。\n但是需要定位到具体线程或者代码。")]),t._v(" "),n("p",[t._v("3、通过ps查看指定进程中各个线程占用CPU的状态\n查看指定进程中各个线程占用CPU的状态，选出耗时最多、最繁忙的线程id。\nps -mp pid -o THREAD,tid,time\n找到了耗时最高的线程55555，占用CPU时间快三个小时了！")]),t._v(" "),n("p",[t._v("4、将需要的线程ID转换为16进制格式\nprintf “%x\\n” tid")]),t._v(" "),n("p",[t._v("5、最后jstack打印线程的堆栈信息\njstack pid |grep tid -A 30")])])}),[],!1,null,null,null);n.default=i.exports}}]);